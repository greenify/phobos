`std.experimental.all` has been moved to `std`

`std.experimental.all` allowed the convenient use of all Phobos modules
with one import (`import std.experimental.all;`). With this release, this
convenience module has been stabilized and moved to `std`. From now on, the
convenience module can be accessed with `import std;`:

---
import std;
void main()
{
    5f.iota.map!exp2.sum; // 31
}
---

Scripts and experimental code often use long and frequently changing
lists of imports from the standard library.

With this release it is possible to use `import std;` for importing the entire
standard library at once. This can be used for fast prototyping or REPLs:

---
import std;
void main()
{
    6.iota
      .filter!(a => a % 2) // 1 3 5
      .map!(a => a * 2) // 2 6 10
      .tee!writeln // peek into the processed stream
      .substitute(6, -6) // 2 -6 10
      .mean // (2 - 6 + 10) / 3
      .reverseArgs!writefln("Sum: %.2f"); // 2
}
---

As before, symbol conflicts will only arise if a symbol with collisions is used.
In this case, $(LINK2 $(ROOT)spec/module.html#static_imports, static imports) or
$(LINK2 $(ROOT)spec/module.html#renamed_imports, renamed imports) can be used
to uniquely select a specific symbol.

The baseline cost for `import std;`
is less than half a second (varying from system to system) and
work is in progress to reduce this overhead even further.
